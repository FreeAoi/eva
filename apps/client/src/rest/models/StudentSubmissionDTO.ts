/* tslint:disable */
/* eslint-disable */
/**
 * EVA API
 * The EVA API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttachmentSubmissionDTO } from './AttachmentSubmissionDTO';
import {
    AttachmentSubmissionDTOFromJSON,
    AttachmentSubmissionDTOFromJSONTyped,
    AttachmentSubmissionDTOToJSON
} from './AttachmentSubmissionDTO';
import type { StudentSubmissionDTOTeacher } from './StudentSubmissionDTOTeacher';
import {
    StudentSubmissionDTOTeacherFromJSON,
    StudentSubmissionDTOTeacherFromJSONTyped,
    StudentSubmissionDTOTeacherToJSON
} from './StudentSubmissionDTOTeacher';

/**
 *
 * @export
 * @interface StudentSubmissionDTO
 */
export interface StudentSubmissionDTO {
    /**
     * Submission id
     * @type {number}
     * @memberof StudentSubmissionDTO
     */
    id: number;
    /**
     * Submission score
     * @type {number}
     * @memberof StudentSubmissionDTO
     */
    score: number;
    /**
     * Submission comment
     * @type {string}
     * @memberof StudentSubmissionDTO
     */
    comment: string;
    /**
     * Submission created at
     * @type {string}
     * @memberof StudentSubmissionDTO
     */
    createdAt: string;
    /**
     * check if submission is qualified
     * @type {boolean}
     * @memberof StudentSubmissionDTO
     */
    qualified: boolean;
    /**
     * Submission updated at
     * @type {string}
     * @memberof StudentSubmissionDTO
     */
    updatedAt: string;
    /**
     * Task submission attachments
     * @type {Array<AttachmentSubmissionDTO>}
     * @memberof StudentSubmissionDTO
     */
    attachments: Array<AttachmentSubmissionDTO>;
    /**
     *
     * @type {StudentSubmissionDTOTeacher}
     * @memberof StudentSubmissionDTO
     */
    teacher: StudentSubmissionDTOTeacher;
}

/**
 * Check if a given object implements the StudentSubmissionDTO interface.
 */
export function instanceOfStudentSubmissionDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'id' in value;
    isInstance = isInstance && 'score' in value;
    isInstance = isInstance && 'comment' in value;
    isInstance = isInstance && 'createdAt' in value;
    isInstance = isInstance && 'qualified' in value;
    isInstance = isInstance && 'updatedAt' in value;
    isInstance = isInstance && 'attachments' in value;
    isInstance = isInstance && 'teacher' in value;

    return isInstance;
}

export function StudentSubmissionDTOFromJSON(json: any): StudentSubmissionDTO {
    return StudentSubmissionDTOFromJSONTyped(json, false);
}

export function StudentSubmissionDTOFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): StudentSubmissionDTO {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: json['id'],
        score: json['score'],
        comment: json['comment'],
        createdAt: json['createdAt'],
        qualified: json['qualified'],
        updatedAt: json['updatedAt'],
        attachments: (json['attachments'] as Array<any>).map(
            AttachmentSubmissionDTOFromJSON
        ),
        teacher: StudentSubmissionDTOTeacherFromJSON(json['teacher'])
    };
}

export function StudentSubmissionDTOToJSON(value?: StudentSubmissionDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        score: value.score,
        comment: value.comment,
        createdAt: value.createdAt,
        qualified: value.qualified,
        updatedAt: value.updatedAt,
        attachments: (value.attachments as Array<any>).map(AttachmentSubmissionDTOToJSON),
        teacher: StudentSubmissionDTOTeacherToJSON(value.teacher)
    };
}
