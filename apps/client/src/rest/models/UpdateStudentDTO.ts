/* tslint:disable */
/* eslint-disable */
/**
 * EVA API
 * The EVA API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StudentDTODescription } from './StudentDTODescription';
import {
    StudentDTODescriptionFromJSON,
    StudentDTODescriptionFromJSONTyped,
    StudentDTODescriptionToJSON
} from './StudentDTODescription';

/**
 *
 * @export
 * @interface UpdateStudentDTO
 */
export interface UpdateStudentDTO {
    /**
     * Student password
     * @type {string}
     * @memberof UpdateStudentDTO
     */
    password?: string;
    /**
     *
     * @type {StudentDTODescription}
     * @memberof UpdateStudentDTO
     */
    description?: StudentDTODescription;
    /**
     *
     * @type {StudentDTODescription}
     * @memberof UpdateStudentDTO
     */
    city?: StudentDTODescription;
    /**
     * user avatar
     * @type {Blob}
     * @memberof UpdateStudentDTO
     */
    avatar?: Blob;
}

/**
 * Check if a given object implements the UpdateStudentDTO interface.
 */
export function instanceOfUpdateStudentDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateStudentDTOFromJSON(json: any): UpdateStudentDTO {
    return UpdateStudentDTOFromJSONTyped(json, false);
}

export function UpdateStudentDTOFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): UpdateStudentDTO {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        password: !exists(json, 'password') ? undefined : json['password'],
        description: !exists(json, 'description')
            ? undefined
            : StudentDTODescriptionFromJSON(json['description']),
        city: !exists(json, 'city')
            ? undefined
            : StudentDTODescriptionFromJSON(json['city']),
        avatar: !exists(json, 'avatar') ? undefined : json['avatar']
    };
}

export function UpdateStudentDTOToJSON(value?: UpdateStudentDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        password: value.password,
        description: StudentDTODescriptionToJSON(value.description),
        city: StudentDTODescriptionToJSON(value.city),
        avatar: value.avatar
    };
}
