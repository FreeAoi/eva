/* tslint:disable */
/* eslint-disable */
/**
 * EVA API
 * The EVA API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StudentSubmissionDTO } from './StudentSubmissionDTO';
import {
    StudentSubmissionDTOFromJSON,
    StudentSubmissionDTOFromJSONTyped,
    StudentSubmissionDTOToJSON
} from './StudentSubmissionDTO';

/**
 *
 * @export
 * @interface TaskDTO
 */
export interface TaskDTO {
    /**
     * The id of the task
     * @type {number}
     * @memberof TaskDTO
     */
    id: number;
    /**
     * The title of the task
     * @type {string}
     * @memberof TaskDTO
     */
    title: string;
    /**
     * The max score of the task
     * @type {number}
     * @memberof TaskDTO
     */
    maxScore: number;
    /**
     * The due date of the task
     * @type {string}
     * @memberof TaskDTO
     */
    dueDate: string;
    /**
     * Task submission
     * @type {Array<StudentSubmissionDTO>}
     * @memberof TaskDTO
     */
    submissions: Array<StudentSubmissionDTO> | null;
}

/**
 * Check if a given object implements the TaskDTO interface.
 */
export function instanceOfTaskDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'id' in value;
    isInstance = isInstance && 'title' in value;
    isInstance = isInstance && 'maxScore' in value;
    isInstance = isInstance && 'dueDate' in value;
    isInstance = isInstance && 'submissions' in value;

    return isInstance;
}

export function TaskDTOFromJSON(json: any): TaskDTO {
    return TaskDTOFromJSONTyped(json, false);
}

export function TaskDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskDTO {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: json['id'],
        title: json['title'],
        maxScore: json['maxScore'],
        dueDate: json['dueDate'],
        submissions:
            json['submissions'] === null
                ? null
                : (json['submissions'] as Array<any>).map(StudentSubmissionDTOFromJSON)
    };
}

export function TaskDTOToJSON(value?: TaskDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        title: value.title,
        maxScore: value.maxScore,
        dueDate: value.dueDate,
        submissions:
            value.submissions === null
                ? null
                : (value.submissions as Array<any>).map(StudentSubmissionDTOToJSON)
    };
}
