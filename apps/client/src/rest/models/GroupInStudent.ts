/* tslint:disable */
/* eslint-disable */
/**
 * EVA API
 * The EVA API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CourseInGroupInStudent } from './CourseInGroupInStudent';
import {
    CourseInGroupInStudentFromJSON,
    CourseInGroupInStudentFromJSONTyped,
    CourseInGroupInStudentToJSON
} from './CourseInGroupInStudent';

/**
 *
 * @export
 * @interface GroupInStudent
 */
export interface GroupInStudent {
    /**
     * Group id
     * @type {string}
     * @memberof GroupInStudent
     */
    id: string;
    /**
     * Group name
     * @type {string}
     * @memberof GroupInStudent
     */
    name: string;
    /**
     * Group courses
     * @type {Array<CourseInGroupInStudent>}
     * @memberof GroupInStudent
     */
    courses: Array<CourseInGroupInStudent>;
}

/**
 * Check if a given object implements the GroupInStudent interface.
 */
export function instanceOfGroupInStudent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'id' in value;
    isInstance = isInstance && 'name' in value;
    isInstance = isInstance && 'courses' in value;

    return isInstance;
}

export function GroupInStudentFromJSON(json: any): GroupInStudent {
    return GroupInStudentFromJSONTyped(json, false);
}

export function GroupInStudentFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): GroupInStudent {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: json['id'],
        name: json['name'],
        courses: (json['courses'] as Array<any>).map(CourseInGroupInStudentFromJSON)
    };
}

export function GroupInStudentToJSON(value?: GroupInStudent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        name: value.name,
        courses: (value.courses as Array<any>).map(CourseInGroupInStudentToJSON)
    };
}
