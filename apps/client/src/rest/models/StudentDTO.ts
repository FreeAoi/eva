/* tslint:disable */
/* eslint-disable */
/**
 * EVA API
 * The EVA API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StudentDTOGroup } from './StudentDTOGroup';
import {
    StudentDTOGroupFromJSON,
    StudentDTOGroupFromJSONTyped,
    StudentDTOGroupToJSON
} from './StudentDTOGroup';

/**
 *
 * @export
 * @interface StudentDTO
 */
export interface StudentDTO {
    /**
     * Student id
     * @type {string}
     * @memberof StudentDTO
     */
    id: string;
    /**
     * Student name
     * @type {string}
     * @memberof StudentDTO
     */
    firstName: string;
    /**
     * Student surname
     * @type {string}
     * @memberof StudentDTO
     */
    lastName: string;
    /**
     * Student email
     * @type {string}
     * @memberof StudentDTO
     */
    email: string;
    /**
     * Student group id
     * @type {object}
     * @memberof StudentDTO
     */
    groupId: object;
    /**
     * Student career data
     * @type {object}
     * @memberof StudentDTO
     */
    career: object;
    /**
     *
     * @type {StudentDTOGroup}
     * @memberof StudentDTO
     */
    group: StudentDTOGroup;
}

/**
 * Check if a given object implements the StudentDTO interface.
 */
export function instanceOfStudentDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'id' in value;
    isInstance = isInstance && 'firstName' in value;
    isInstance = isInstance && 'lastName' in value;
    isInstance = isInstance && 'email' in value;
    isInstance = isInstance && 'groupId' in value;
    isInstance = isInstance && 'career' in value;
    isInstance = isInstance && 'group' in value;

    return isInstance;
}

export function StudentDTOFromJSON(json: any): StudentDTO {
    return StudentDTOFromJSONTyped(json, false);
}

export function StudentDTOFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): StudentDTO {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: json['id'],
        firstName: json['firstName'],
        lastName: json['lastName'],
        email: json['email'],
        groupId: json['groupId'],
        career: json['career'],
        group: StudentDTOGroupFromJSON(json['group'])
    };
}

export function StudentDTOToJSON(value?: StudentDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        firstName: value.firstName,
        lastName: value.lastName,
        email: value.email,
        groupId: value.groupId,
        career: value.career,
        group: StudentDTOGroupToJSON(value.group)
    };
}
