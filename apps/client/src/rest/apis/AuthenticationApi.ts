/* tslint:disable */
/* eslint-disable */
/**
 * EVA API
 * The EVA API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { AcessTokenDTO } from '../models';
import { AcessTokenDTOFromJSON, AcessTokenDTOToJSON } from '../models';

export interface AuthControllerLoginRequest {
    body: object;
}

/**
 * AuthenticationApi - interface
 *
 * @export
 * @interface AuthenticationApiInterface
 */
export interface AuthenticationApiInterface {
    /**
     *
     * @param {object} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    authControllerLoginRaw(
        requestParameters: AuthControllerLoginRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<runtime.ApiResponse<AcessTokenDTO>>;

    /**
     */
    authControllerLogin(
        requestParameters: AuthControllerLoginRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<AcessTokenDTO>;
}

/**
 *
 */
export class AuthenticationApi
    extends runtime.BaseAPI
    implements AuthenticationApiInterface
{
    /**
     */
    async authControllerLoginRaw(
        requestParameters: AuthControllerLoginRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<runtime.ApiResponse<AcessTokenDTO>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter requestParameters.body was null or undefined when calling authControllerLogin.'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request(
            {
                path: `/api/auth/login`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: requestParameters.body as any
            },
            initOverrides
        );

        return new runtime.JSONApiResponse(response, (jsonValue) =>
            AcessTokenDTOFromJSON(jsonValue)
        );
    }

    /**
     */
    async authControllerLogin(
        requestParameters: AuthControllerLoginRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<AcessTokenDTO> {
        const response = await this.authControllerLoginRaw(
            requestParameters,
            initOverrides
        );
        return await response.value();
    }
}
